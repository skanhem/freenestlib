# Boost
# Famous C++ library that has given rise to many new additions to the C++ Standard Library
# Makes @boost available for use: For example, add `@boost//:algorithm` to your deps.
# For more, see https://github.com/nelhage/rules_boost and https://www.boost.org
bazel_dep(name = "rules_boost", repo_name = "com_github_nelhage_rules_boost")
archive_override(
    module_name = "rules_boost",
    urls = ["https://github.com/nelhage/rules_boost/archive/refs/heads/master.tar.gz"],
    strip_prefix = "rules_boost-master",
    # It is recommended to edit the above URL and the below sha256 to point to a specific version of this repository.
    # integrity = "sha256-...",
)

non_module_boost_repositories = use_extension("@com_github_nelhage_rules_boost//:boost/repositories.bzl", "non_module_dependencies")
use_repo(
    non_module_boost_repositories,
    "boost",
)

bazel_dep(name = "boost.mpl", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.config", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.type_traits", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.utility", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.iterator", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.range", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.algorithm", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.format", version = "1.83.0.bcr.2")
bazel_dep(name = "boost.math", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.variant", version = "1.83.0.bcr.2")
bazel_dep(name = "boost.spirit", version = "1.83.0.bcr.2")